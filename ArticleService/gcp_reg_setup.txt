# Based on this blog post: https://python.plainenglish.io/how-to-store-python-packages-in-google-artifact-registry-9a28d80d8040
# Also added information form https://cloud.google.com/artifact-registry/docs/python/store-python
# Authentication: https://cloud.google.com/artifact-registry/docs/python/authentication

gcloud artifacts repositories create dev-projects \
   --repository-format=python --location=europe-west6

or:



twine upload --repository-url https://europe-west6-python.pkg.dev/mtg-scraper-385015/dev-projects/ dist/* --skip-existing

0. Set up Python libs
    conda create --prefix ./env_build
    conda activate ./env_build
    pip install keyring
    pip install keyrings.google-artifactregistry-auth
    pip install twine
    pip install pip_audit
    pip install 'build<0.10.0'
1. Create repos:
    gcloud artifacts repositories create dev-projects \
        --repository-format=python \
        --location=europe-west6 \
        --description="Dev Projects Repo"
2. Create service account (if it doesn't exist yet):
    gcloud config get-value project
    gcloud iam service-accounts create github-actions-sa --description="Service Account for GitHub Actions" --display-name="GitHub Actions SA"
3. Assign permissions
    gcloud projects add-iam-policy-binding mtg-scraper-385015 --member="serviceAccount:github-actions-sa@mtg-scraper-385015.iam.gserviceaccount.com" --role="roles/artifactregistry.repoAdmin"
    Or use existing from CI:
    gcloud projects add-iam-policy-binding mtg-scraper-385015 --member="serviceAccount:github-ci-service-account@mtg-scraper-385015.iam.gserviceaccount.com" --role="roles/artifactregistry.repoAdmin"
4. Create key:
    gcloud iam service-accounts keys create ./key_github-actions-sa.json --iam-account github-actions-sa@mtg-scraper-385015.iam.gserviceaccount.com
5. [local] Create .pypirc file in $HOME:
    Information is provided by running this command:
    gcloud artifacts print-settings python --project=mtg-scraper-385015 \
    --repository=dev-projects \
    --location=europe-west6


    [distutils]
    index-servers =
        dev-projects

    [dev-projects]
    repository: https://europe-west6-python.pkg.dev/mtg-scraper-385015/dev-projects/

    # Insert the following snippet into your pip.conf

    [global]
    extra-index-url = https://europe-west6-python.pkg.dev/mtg-scraper-385015/dev-projects/

6. [local] Set up credentials:
    export GOOGLE_APPLICATION_CREDENTIALS=/Users/vaclavpechtor/Code/home_projects/wotc-scraper-gcp/ArticleService/key_github-actions-sa.json
    Alternative:
    export GOOGLE_APPLICATION_CREDENTIALS=/Users/vaclavpechtor/Code/home_projects/wotc-scraper-gcp/ArticleService/key_githu_ci_user.json
7. [local] Prepare pip for using ArtifactRepository
    export VIRTUAL_ENV=$(dirname $(dirname $(which pip)))
    code $VIRTUAL_ENV/pip.conf
    Add:
    [global]
    extra-index-url = https://europe-west6-python.pkg.dev/mtg-scraper-385015/dev-projects/simple/
8. Build & Upload:
    rm -r ./dist # Don't forget to update the version
    python -m build --sdist --wheel
    twine upload -r dev-projects --verbose dist/*  
8. Test:
    pip install ArticleService

To rung gcloud in GitHub actions some more configuration is needed.

9. Allow impersonating of service accounts:
    gcloud iam service-accounts add-iam-policy-binding \
    --role roles/iam.serviceAccountTokenCreator \
    --member "serviceAccount:github-ci-service-account@mtg-scraper-385015.iam.gserviceaccount.com" \
    github-ci-service-account@mtg-scraper-385015.iam.gserviceaccount.com

10. To create the key file, first set the permissions:
    gcloud projects add-iam-policy-binding mtg-scraper-385015 --member=serviceAccount:github-ci-service-account@mtg-scraper-385015.iam.gserviceaccount.com --role=roles/iam.serviceAccountKeyAdmin


-------------------------------------------------------------------------------------------------------
How to set up auth with json file (only that works with twine)
See also:
https://medium.com/@verazabeida/using-json-in-your-github-actions-when-authenticating-with-gcp-856089db28cf
https://stackoverflow.com/questions/74388673/cant-authenticate-google-cloud-with-service-key-on-github-actions-unexpected

1. Convert the json to base64:
    cat key_github_ci_user.json | base64
2. Upload to GitHub as secrets
3. Use the key (base64) in the action:
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
4. Add the key (base64) in .pypirc:
    - name: Set up .pypirc
      run: |
        echo '[distutils]' > ~/.pypirc
        echo 'index-servers = dev-projects' >> ~/.pypirc
        echo '[dev-projects]' >> ~/.pypirc
        echo 'repository = https://europe-west6-python.pkg.dev/mtg-scraper-385015/dev-projects/' >> ~/.pypirc
        echo 'username: _json_key_base64' >> ~/.pypirc
        echo "password: ${{ secrets.GCP_SA_KEY }}" >> ~/.pypirc
5. Twine uses the key automatically:
    - name: Publish Package to Artifact Registry
      run: |
        python -m pip install twine
        twine upload -r dev-projects ./ArticleService/dist/* --verbose
    Output:
    INFO     Using configuration from /home/runner/.pypirc                          
    Uploading distributions to 
    https://europe-west6-python.pkg.dev/mtg-scraper-385015/dev-projects/
    INFO     ./ArticleService/dist/ArticleService-0.1.5-py3-none-any.whl (4.5 KB)   
    INFO     ./ArticleService/dist/ArticleService-0.1.5.tar.gz (19.4 KB)            
    INFO     username set from config file                                          
    INFO     password set from config file                                          
    INFO     username: _json_key_base64                                             
    INFO     password: <hidden>            

